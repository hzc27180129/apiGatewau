lua_package_path '/var/www/html/my/?.lua;/usr/local/openresty/lualib/?.lua;';
lua_shared_dict shared_ip_blacklist 1m; #定义ip_blacklist 本地缓存变量
init_by_lua_block {
        local main = require("apiGateway.main");
        local apiGateway = main:new(nil);
        -- Here, you can also use the absolute path, eg: local confige_file = "/var/www/html/my/apiGateway/config/config.conf"
        local config_file = "/var/www/html/my/apiGateway/config/config.conf"
        ngx.log(ngx.DEBUG, "++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++");
    
        apiGateway:init({
            config = config_file
        })

        -- the apiGateway context
        context = {
            apiGateway = apiGateway
        }
    }

    init_worker_by_lua_block {
        local apiGateway = context.apiGateway
        apiGateway:init_worker()
    }
server {
    listen       80;
    server_name  localhost;
    root         /var/www/html;
    index  index.php index.html index.htm;
    #error_page 404 /404.html;
    #        location = /40x.html {
    #}
    #error_page 500 502 503 504 /50x.html;
     #       location = /50x.html {
    #}
	lua_code_cache off;
    location / {
    	index  index.php index.htm index.html;
    	
    }


     location ~ .+\.php($|/) {
     rewrite_by_lua_block {
            local apiGateway = context.apiGateway
            apiGateway:redirect()
            apiGateway:rewrite()
        }

        access_by_lua_block {
            local apiGateway = context.apiGateway
            apiGateway:access()
        }
        #proxy_set_header X-Real-IP $remote_addr;
        #proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #proxy_set_header X-Forwarded-Scheme $scheme;
        #proxy_set_header Host $upstream_host;
        #proxy_pass $upstream_url;


        header_filter_by_lua_block {
            local apiGateway = context.apiGateway
            apiGateway:header_filter()
        }

        body_filter_by_lua_block {
            local apiGateway = context.apiGateway
            apiGateway:body_filter()
        }

        log_by_lua_block {
            local apiGateway = context.apiGateway
            apiGateway:log()
        }
           root           /var/www/html;
             fastcgi_pass   docker-compose_phpfpm_1:9000;
             fastcgi_index  index.php;
             set $real_script_name $fastcgi_script_name;

                 if ($fastcgi_script_name ~ "^(.+?\.php)(/.+)$") {

                     set $real_script_name $1;

                     set $path_info $2;

                 }
                 fastcgi_param SCRIPT_FILENAME $document_root$real_script_name;
                 fastcgi_param SCRIPT_NAME $real_script_name;
                 fastcgi_param PATH_INFO $path_info;
                 include        fastcgi_params;
         }
}